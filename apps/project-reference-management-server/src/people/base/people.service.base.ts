/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, People as PrismaPeople } from "@prisma/client";

export class PeopleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PeopleCountArgs, "select">): Promise<number> {
    return this.prisma.people.count(args);
  }

  async peopleItems(args: Prisma.PeopleFindManyArgs): Promise<PrismaPeople[]> {
    return this.prisma.people.findMany(args);
  }
  async people(
    args: Prisma.PeopleFindUniqueArgs
  ): Promise<PrismaPeople | null> {
    return this.prisma.people.findUnique(args);
  }
  async createPeople(args: Prisma.PeopleCreateArgs): Promise<PrismaPeople> {
    return this.prisma.people.create(args);
  }
  async updatePeople(args: Prisma.PeopleUpdateArgs): Promise<PrismaPeople> {
    return this.prisma.people.update(args);
  }
  async deletePeople(args: Prisma.PeopleDeleteArgs): Promise<PrismaPeople> {
    return this.prisma.people.delete(args);
  }
}
